INHERITS BDCursosAlumnosRegistro
PRIVATE t1 AS Object
PRIVATE mRs AS Result  
PRIVATE mBase AS Connection 

PUBLIC SUB resultObject(resultado AS Result) AS object[]
DIM hField AS ResultField
DIM a AS Integer
DIM tarray AS NEW Object[resultado.count]
FOR a = 0 TO resultado.count - 1
tarray[a] = NEW BDCursosAlumnosRegistro 
NEXT 
 a = -1 
'por cada resultado desponible
DO WHILE resultado.Available
'va creando y aÃ±adiendo valores al nuevo objeto
INC a
t1 = NEW BDCursosAlumnosRegistro 
 TRY t1.Alumno_RutaFoto = resultado["Alumno.RutaFoto"]
 TRY t1.Alumno_idAlumno = resultado["Alumno.idAlumno"]
 TRY t1.Alumno_Apellido = resultado["Alumno.Apellido"]
 TRY t1.Alumno_Nombre = resultado["Alumno.Nombre"]
 TRY t1.Alumno_Documento = resultado["Alumno.Documento"]
 TRY t1.Alumno_FechaNacimiento = resultado["Alumno.FechaNacimiento"]
 TRY t1.Alumno_Domicilio = resultado["Alumno.Domicilio"]
 TRY t1.Alumno_Telefono = resultado["Alumno.Telefono"]
 TRY t1.Alumno_Nacionalidad = resultado["Alumno.Nacionalidad"]
 TRY t1.Alumno_EscOrigen = resultado["Alumno.EscOrigen"]
 TRY t1.Alumno_Legajo = resultado["Alumno.Legajo"]
 TRY t1.Curso_idCurso = resultado["Curso.idCurso"]
 TRY t1.Curso_Nombre = resultado["Curso.Nombre"]
 TRY t1.Curso_Detalle = resultado["Curso.Detalle"]
 TRY t1.Relacion_idRelacion = resultado["Relacion.idRelacion"]
 TRY t1.Relacion_idAlumno = resultado["Relacion.idAlumno"]
 TRY t1.Relacion_idCurso = resultado["Relacion.idCurso"]
 TRY t1.Relacion_Observacion = resultado["Relacion.Observacion"]

for each hfield in resultado.fields
  t1.campovisible.add(str$(hfield.name))
next

tarray[a]=T1
resultado.MoveNext()

LOOP
RETURN tarray
END

PUBLIC SUB EscribeObjetos(t AS Object[])
  DIM a AS Integer
  PRINT "Listado:" 
  PRINT "****************************************"
  FOR a = 0 TO t.Count - 1
    PRINT t.count & " -> " & a
 Print "Alumno_RutaFoto: ", t[a].Alumno_RutaFoto
 Print "Alumno_idAlumno: ", t[a].Alumno_idAlumno
 Print "Alumno_Apellido: ", t[a].Alumno_Apellido
 Print "Alumno_Nombre: ", t[a].Alumno_Nombre
 Print "Alumno_Documento: ", t[a].Alumno_Documento
 Print "Alumno_FechaNacimiento: ", t[a].Alumno_FechaNacimiento
 Print "Alumno_Domicilio: ", t[a].Alumno_Domicilio
 Print "Alumno_Telefono: ", t[a].Alumno_Telefono
 Print "Alumno_Nacionalidad: ", t[a].Alumno_Nacionalidad
 Print "Alumno_EscOrigen: ", t[a].Alumno_EscOrigen
 Print "Alumno_Legajo: ", t[a].Alumno_Legajo
 Print "Curso_idCurso: ", t[a].Curso_idCurso
 Print "Curso_Nombre: ", t[a].Curso_Nombre
 Print "Curso_Detalle: ", t[a].Curso_Detalle
 Print "Relacion_idRelacion: ", t[a].Relacion_idRelacion
 Print "Relacion_idAlumno: ", t[a].Relacion_idAlumno
 Print "Relacion_idCurso: ", t[a].Relacion_idCurso
 Print "Relacion_Observacion: ", t[a].Relacion_Observacion
   PRINT "-----------------------------------------"
  NEXT
END

Public Function GridObjetos(t as object[],grid as gridview) as gridview
DIM columnas as integer
dim a as integer
dim b as integer
dim fila as integer
dim cabecera as new string[]
dim pos as integer
'defino regilla
with grid
.header=3
.rows.count=t.count
try .columns.count=t[0].campovisible.count
.font.name="Sans"
.font.size=10
End With
'asignar titulos a columnas
columnas=t[0].campovisible.count
for a=0 to columnas-1
try  grid.columns[a].title=t[0].campovisible[a]
next
pos=-1
For a=0 to t.count-1
for b=0 to columnas-1
select case t[0].campovisible[b]
 Case "Alumno.RutaFoto"
      grid[a,b].text=t[a].Alumno_RutaFoto
 Case "Alumno.idAlumno"
      grid[a,b].text=t[a].Alumno_idAlumno
 Case "Alumno.Apellido"
      grid[a,b].text=t[a].Alumno_Apellido
 Case "Alumno.Nombre"
      grid[a,b].text=t[a].Alumno_Nombre
 Case "Alumno.Documento"
      grid[a,b].text=t[a].Alumno_Documento
 Case "Alumno.FechaNacimiento"
      grid[a,b].text=t[a].Alumno_FechaNacimiento
 Case "Alumno.Domicilio"
      grid[a,b].text=t[a].Alumno_Domicilio
 Case "Alumno.Telefono"
      grid[a,b].text=t[a].Alumno_Telefono
 Case "Alumno.Nacionalidad"
      grid[a,b].text=t[a].Alumno_Nacionalidad
 Case "Alumno.EscOrigen"
      grid[a,b].text=t[a].Alumno_EscOrigen
 Case "Alumno.Legajo"
      grid[a,b].text=t[a].Alumno_Legajo
 Case "Curso.idCurso"
      grid[a,b].text=t[a].Curso_idCurso
 Case "Curso.Nombre"
      grid[a,b].text=t[a].Curso_Nombre
 Case "Curso.Detalle"
      grid[a,b].text=t[a].Curso_Detalle
 Case "Relacion.idRelacion"
      grid[a,b].text=t[a].Relacion_idRelacion
 Case "Relacion.idAlumno"
      grid[a,b].text=t[a].Relacion_idAlumno
 Case "Relacion.idCurso"
      grid[a,b].text=t[a].Relacion_idCurso
 Case "Relacion.Observacion"
      grid[a,b].text=t[a].Relacion_Observacion
  Case Else
      Message.info("Columna desconocida:" & t[0].campovisible[b] )
End Select
Next
Next
return grid
End

PUBLIC function sql( consulta AS string) As result
try mRs=mbase.Exec(consulta) 
If error then message.info("Consulta erronea, revisela")
return mRs 
END 

PUBLIC SUB Abrir(optional ruta as string) 
DIM conexion AS NEW Connection
if ruta<>"" or ruta<>null then 
mBase = conectar.abrir(conexion,ruta) 
 else 
 mBase = conectar.abrir(conexion) 
 endif 
END SUB 

PUBLIC SUB Cerrar() 
 mRs= null
 mBase.close 
END SUB 

